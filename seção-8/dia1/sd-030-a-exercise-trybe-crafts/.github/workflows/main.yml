on:
  pull_request:
    types: [opened, synchronize]

jobs:
  evaluator:
    runs-on: self-hosted
    name: Evaluator
    steps:
      - name: Fetch project repository
        uses: actions/checkout@v3

      - name: Fetch Blocked files action
        uses: actions/checkout@v3
        with:
          repository: betrybe/blocked-files-checkout-action
          ref: v2
          token: ${{ secrets.GIT_HUB_PAT }}
          path: .github/actions/blocked-files-checkout-action

      - name: Fetch ESLint evaluator
        uses: actions/checkout@v3
        with:
          repository: betrybe/eslint-linter-action
          ref: v3.3
          token: ${{ secrets.GIT_HUB_PAT }}
          path: .github/actions/eslint-linter

      - name: Fetch Jest evaluator
        uses: actions/checkout@v3
        with:
          repository: betrybe/jest-evaluator-action
          ref: v9.3
          path: .github/actions/jest-evaluator
          token: ${{ secrets.GIT_HUB_PAT }}

      - name: Fetch Store evaluation
        uses: actions/checkout@v3
        with:
          repository: betrybe/store-evaluation-action
          ref: v8.0
          token: ${{ secrets.GIT_HUB_PAT }}
          path: .github/actions/store-evaluation

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Restore protected files
        uses: ./.github/actions/blocked-files-checkout-action
        with:
          restore_branch: 'main'

      - name: Run ESLint evaluator
        uses: ./.github/actions/eslint-linter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pr_number: ${{ github.event.pull_request.number }}

      - name: Run Jest evaluation
        id: evaluator
        uses: ./.github/actions/jest-evaluator
        with:
          pr_author_username: ${{ github.event.pull_request.user.login }}

      - name: Run Store evaluation
        uses: ./.github/actions/store-evaluation
        with:
          evaluation-data: ${{ steps.evaluator.outputs.result }} # USE THE STEP ID TO GET THE OUTPUT
          environment: production
          token: ${{ secrets.GITHUB_TOKEN }}
