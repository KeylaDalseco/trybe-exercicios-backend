// Todas as atividades desse modulo estÃ£o no repositÃ³rio https://github.com/tryber/trybecar. Aqui usamos o branch 1-begin

// ExercÃ­cio 1
// Qual Ã© a importÃ¢ncia da arquitetura de software no desenvolvimento de um sistema?
// ExercÃ­cio 2
// Quais sÃ£o os principais objetivos da arquitetura de software?

const resposta1e2 = 'A arquitetura Ã© importante para termos organizaÃ§Ã£o do nosso cÃ³digo, principalmente quando a estrutura do cÃ³digo pode crescer muito. Qualquer pessoa desenvolvedora, como jr ou pleno/senior conseguirÃ¡ entender como estÃ¡ estruturado aquele cÃ³digo e terÃ¡ facilidade para implementar funÃ§Ãµes ou outros cÃ³digos, alÃ©m de definir a estrutura bÃ¡sica do software, como seus componentes interagem entre si e garante que o sistema seja escalÃ¡vel, seguro, robusto e tenha boa performance.'

// ExercÃ­cio 3
// Quais sÃ£o os possÃ­veis desafios ao realizar alteraÃ§Ãµes na arquitetura de um sistema que jÃ¡ estÃ¡ em produÃ§Ã£o?

const resposta3 = 'VocÃª pode encontrar dificuldades para implementar algumas funÃ§Ãµes ou atÃ© trocar o banco de dados utilizado, pois podem haver conflitos que podem atrapalhar o funcionamento do sistema, erros de compatibilidade de componentes.';


// ExercÃ­cio 4
// O que Ã© a camada de model na arquitetura em camadas de software?

const resposta4 = 'A camada de model Ã© responsÃ¡vel por armazenar, alterar e recuperar os dados do sistema. Ela Ã© a camada mais prÃ³xima do banco de dados e Ã© responsÃ¡vel por realizar as operaÃ§Ãµes de CRUD (Create, Read, Update e Delete) no banco de dados.'


// ğŸš€ ExercÃ­cio 5
// Crie a funÃ§Ã£o na camada de model responsÃ¡vel por deletar uma pessoa passageira.
// Implemente a rota DELETE /passenger/:id para deletar uma pessoa passageira. Ao remover deve retornar o status HTTP 204.
// Utilize a partir da branch 1-live-lecture do repositÃ³rio do Trybecar para realizar os exercÃ­cios.

// meu model:
const remove = async (id) => {
  const result = await connection.execute('DELETE FROM passengers WHERE id = ?', [id]);
  return result;
};

// minha rota:
app.delete('/passengers/:id', async (req, res) => {
  const { id } = req.params;
  await passengerModel.remove(id);
  return res.status(204).end();
});

